{
  "info": {
    "name": "Germy User Service - Complete Collection",
    "description": "Comprehensive test collection for the Germy User Service with all endpoints, authentication, and test scenarios",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3003",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "companyId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication Setup",
      "item": [
        {
          "name": "Get Auth Token (Login)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data && response.data.token) {",
                  "        pm.collectionVariables.set('authToken', response.data.token);",
                  "        pm.collectionVariables.set('userId', response.data.user.id);",
                  "        pm.collectionVariables.set('companyId', response.data.user.companyId);",
                  "        console.log('Auth token set:', response.data.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"admin@platform.com\",\n  \"password\": \"AdminPass123!\"\n}"
          },
          "url": {
            "raw": "{{authBaseUrl}}/api/auth/login",
            "host": ["{{authBaseUrl}}"],
            "path": ["api", "auth", "login"]
          }
        }
        }
      ]
    },
    {
      "name": "üë• User Management",
      "item": [
        {
          "name": "Get All Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success property', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success');",
                  "});",
                  "",
                  "pm.test('Response has data with users array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.have.property('users');",
                  "    pm.expect(response.data.users).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Get Users with Role Filter",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?role=user&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "role",
                  "value": "user"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Users with Search",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?search=john&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "search",
                  "value": "john"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Search Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/search?q=admin&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "admin"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data && response.data.user) {",
                  "        pm.collectionVariables.set('userId', response.data.user.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Update User (PUT)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"phone\": \"+1234567890\",\n  \"position\": \"Senior Developer\",\n  \"department\": \"Engineering\",\n  \"hireDate\": \"2024-01-15T00:00:00.000Z\",\n  \"salary\": 75000,\n  \"profilePhotoUrl\": \"https://example.com/photo.jpg\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Update User (PATCH)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John Patched\",\n  \"position\": \"Lead Developer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Deactivate User",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/deactivate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}", "deactivate"]
            }
          }
        }
      ]
    },
    {
      "name": "‚öôÔ∏è User Preferences",
      "item": [
        {
          "name": "Get User Preferences",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/preferences",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}", "preferences"]
            }
          }
        },
        {
          "name": "Update User Preferences",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"theme\": \"dark\",\n  \"language\": \"en\",\n  \"timezone\": \"America/New_York\",\n  \"dateFormat\": \"MM/DD/YYYY\",\n  \"timeFormat\": \"12h\",\n  \"notifications\": {\n    \"email\": true,\n    \"push\": false,\n    \"sms\": true\n  },\n  \"privacy\": {\n    \"profileVisible\": true,\n    \"activityVisible\": false\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/preferences",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}", "preferences"]
            }
          }
        }
      ]
    },
    {
      "name": "üìä User Activities",
      "item": [
        {
          "name": "Get User Activities",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/activities?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}", "activities"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üîß User Settings",
      "item": [
        {
          "name": "Get User Settings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/settings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}", "settings"]
            }
          }
        },
        {
          "name": "Update User Settings",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workHoursStart\": \"09:00\",\n  \"workHoursEnd\": \"17:00\",\n  \"workDays\": [1, 2, 3, 4, 5],\n  \"breakDuration\": 60,\n  \"overtimeEnabled\": true,\n  \"remoteWorkEnabled\": true,\n  \"attendanceReminders\": {\n    \"clockIn\": true,\n    \"clockOut\": true,\n    \"breakStart\": false\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/settings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}", "settings"]
            }
          }
        }
      ]
    },
    {
      "name": "üìà User Analytics",
      "item": [
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/statistics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}", "statistics"]
            }
          }
        },
        {
          "name": "Get User Activity Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}/activity-summary?days=30",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}", "activity-summary"],
              "query": [
                {
                  "key": "days",
                  "value": "30"
                }
              ]
            }
          }
        },
        {
          "name": "Get Company User Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/analytics/company/{{companyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "analytics", "company", "{{companyId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üì¶ Bulk Operations",
      "item": [
        {
          "name": "Bulk Update Users",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userIds\": [\"{{userId}}\"],\n  \"updateData\": {\n    \"department\": \"Updated Department\",\n    \"position\": \"Updated Position\",\n    \"isActive\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/bulk/update",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "bulk", "update"]
            }
          }
        },
        {
          "name": "Export Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/export/company/{{companyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "export", "company", "{{companyId}}"]
            }
          }
        },
        {
          "name": "Import Users",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"usersData\": [\n    {\n      \"email\": \"newuser1@testcorp.com\",\n      \"firstName\": \"New\",\n      \"lastName\": \"User1\",\n      \"phone\": \"+1234567890\",\n      \"position\": \"Developer\",\n      \"department\": \"Engineering\",\n      \"hireDate\": \"2024-01-15T00:00:00.000Z\",\n      \"salary\": 60000,\n      \"role\": \"user\",\n      \"isActive\": true\n    },\n    {\n      \"email\": \"newuser2@testcorp.com\",\n      \"firstName\": \"New\",\n      \"lastName\": \"User2\",\n      \"phone\": \"+1234567891\",\n      \"position\": \"Designer\",\n      \"department\": \"Design\",\n      \"hireDate\": \"2024-01-20T00:00:00.000Z\",\n      \"salary\": 55000,\n      \"role\": \"user\",\n      \"isActive\": true\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/import",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "import"]
            }
          }
        }
      ]
    },
    {
      "name": "üîç Error Testing",
      "item": [
        {
          "name": "Get User with Invalid ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/invalid-uuid",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "invalid-uuid"]
            }
          }
        },
        {
          "name": "Update User with Invalid Data",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"\",\n  \"phone\": \"invalid-phone\",\n  \"salary\": -1000\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Access User Without Permission",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üè• Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set auth token if available",
          "if (!pm.collectionVariables.get('authToken')) {",
          "    console.log('No auth token found. Please run the Authentication Setup first.');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for all requests",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has proper content type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});"
        ]
      }
    }
  ]
}
