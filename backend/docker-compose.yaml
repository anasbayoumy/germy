version: '3.8'

services:
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: attendance_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./shared/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build: ./services/auth_service
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance_db
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
      - NODE_ENV=development
      - PORT=3001
      - FROM_EMAIL=noreply@germy.com
      - SMTP_HOST=smtp.ethereal.email
      - SMTP_PORT=587
      - SMTP_USER=elnora.greenholt@ethereal.email
      - SMTP_PASS=rcXCZYt1s5XPqhzEq8
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./services/auth_service:/app
      - /app/node_modules

  user-service:
    build: ./services/user_service
    ports:
      - "3003:3003"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance_db
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
      - NODE_ENV=development
      - PORT=3003
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - JOB_QUEUE_REDIS_URL=redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/user_service:/app
      - /app/node_modules

  attendance-service:
    build: ./services/attendance_service
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance_db
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
      - NODE_ENV=development
      - PORT=3002
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3003
      - AI_SERVICE_URL=http://ai-service:3004
    depends_on:
      db:
        condition: service_healthy
      auth-service:
        condition: service_started
      user-service:
        condition: service_started
      ai-service:
        condition: service_started
    volumes:
      - ./services/attendance_service:/app
      - /app/node_modules

  ai-service:
    build: ./services/ai_service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance_db
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3003
      - ATTENDANCE_SERVICE_URL=http://attendance-service:3002
    depends_on:
      db:
        condition: service_healthy

  platform-service:
    build: ./services/platform_service
    image: backend-platform-service
    environment:
      - NODE_ENV=development
      - PLATFORM_SERVICE_PORT=3005
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance_db
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3003
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
    depends_on:
      db:
        condition: service_healthy
      auth-service:
        condition: service_started
      user-service:
        condition: service_started
    ports:
      - "3005:3005"
    volumes:
      - ./services/platform_service:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data: