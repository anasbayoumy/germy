version: '3.8'

services:
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: attendance_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./shared/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build: ./services/auth_service
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance_db
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
      - NODE_ENV=development
      - PORT=3001
      - FROM_EMAIL=noreply@germy.com
      - SMTP_HOST=smtp.ethereal.email
      - SMTP_PORT=587
      - SMTP_USER=elnora.greenholt@ethereal.email
      - SMTP_PASS=rcXCZYt1s5XPqhzEq8
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./services/auth_service:/app
      - /app/node_modules

  user-service:
    build: ./services/user_service
    ports:
      - "3003:3003"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance_db
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
      - NODE_ENV=development
      - PORT=3003
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./services/user_service:/app
      - /app/node_modules

  attendance-service:
    build: ./services/attendance_service
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance_db
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
      - NODE_ENV=development
      - PORT=3002
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3003
      - AI_SERVICE_URL=http://ai-service:3004
    depends_on:
      db:
        condition: service_healthy
      auth-service:
        condition: service_started
      user-service:
        condition: service_started
      ai-service:
        condition: service_started
    volumes:
      - ./services/attendance_service:/app
      - /app/node_modules

  ai-service:
    build: ./services/ai_service
    ports:
      - "3004:3004"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance_db
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
      - NODE_ENV=development
      - PORT=3004
      - GEMINI_API_KEY=your-gemini-api-key
      - ARCFACE_ENABLED=true
      - FRAUD_DETECTION_ENABLED=true
      - ML_ANALYTICS_ENABLED=false
      - RISK_THRESHOLD_HIGH=80
      - RISK_THRESHOLD_MEDIUM=60
      - RISK_THRESHOLD_LOW=40
      - MAX_BATCH_SIZE=10
      - PROCESSING_TIMEOUT=30000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - ATTENDANCE_SERVICE_URL=http://attendance-service:3003
    depends_on:
      db:
        condition: service_healthy
      auth-service:
        condition: service_started
      user-service:
        condition: service_started
    volumes:
      - ./services/ai_service:/app
      - /app/node_modules
      - ./services/ai_service/models:/app/models
      - ./services/ai_service/logs:/app/logs

volumes:
  postgres_data: